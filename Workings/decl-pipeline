//Building Declarative pipeline via standalone static library code file saved in app specific git repo 

pipeline{
  agent any
 
  tools{
    maven "maven3.8.7"
  }
  stages{
    stage("A.CodeClone"){
      steps{
        sh "echo This stage performs git clone action"
        git credentialsId: 'Github-Cred', url: 'https://github.com/KehindeOjewunmi/Gtworld-app.git'
      }
    }
        stage("B.Buildcode"){
      steps{
        sh "echo code is being built"
        sh "mvn clean package"
      }
    }
    stage("C.CodeCheck"){
      steps{
        sh "echo codequality is being checked"
        sh "mvn sonar:sonar"
      }
    }
    stage("D.ArtifactBackup"){
      steps{
        sh "echo performing artifact back up to nexus"
        sh "mvn deploy"
      }
    }
        stage("E.Deploy to UAT"){
      steps{
        sh "echo deploying to UAT environment"
       deploy adapters: [tomcat9(credentialsId: 'Tomcat-Cred', path: '', url: 'http://35.92.39.228:5050/')], contextPath: null, war: 'target/*.war'
      }
    }
    stage("F.Approval"){
      steps{
        sh "echo This stage requires manual approval to proceed"
        timeout(time:2, unit:'DAYS'){
        input message: 'Approval for Prod Env'
      }
    }
    }
    stage("G.Deploy_Prod"){
      steps{
        sh "echo This stage deploy artifact to production environment"
        deploy adapters: [tomcat9(credentialsId: 'Tomcat-Cred', path: '', url: 'http://35.92.39.228:5050/')], contextPath: null, war: 'target/*.war'
      }
    }
    stage("H.SlackAlert"){
      steps{
        sh "echo This stage provides pipeline status on slack channel"
        slackSend channel: 'c9-devsquad-group-4', message: 'Build Successful'
      }
    }
    stage("I.EmailAlert"){
      steps{
        sh "echo This stage provides pipeline status by email"
        emailext body: 'Build Success', subject: 'Build Status', to: 'kaydevopslearning@gmail.com'
      }
    }
}
}